<?xml version="1.0" encoding="UTF-8"?>
<project name="Force.com Metadata Backup" basedir="." xmlns:sf="antlib:com.salesforce">
  <import file="ant-includes/setup-target.xml" />

  <taskdef uri="antlib:com.salesforce" resource="com/salesforce/antlib.xml" classpath="lib/ant-salesforce-${sf.antlib.version}.jar" onerror="failall" />

  <taskdef name="xmlmerge" classname="ch.elca.el4j.services.xmlmerge.anttask.XmlMergeTask" classpath="lib/module-xml_merge-common-3.1.jar;lib/jdom-1.1.3.jar;lib/jaxen-1.1.1.jar;lib/slf4j-api-1.7.7.jar" />

  <import file="ant-includes/list-targets.xml" />

  <property environment="env"/>

  <macrodef name="forceMetaBackup">
    <attribute name="args" default="" />

    <sequential>
      <property name="force.meta.backup.script" value="force-meta-backup.js" />

      <exec osfamily="unix" executable="node"  failonerror="true">
        <arg line="${force.meta.backup.script} @{args}" />
      </exec>

      <exec osfamily="windows" executable="cmd" failonerror="true">
        <arg line="/c node ${force.meta.backup.script} @{args}" />
      </exec>
    </sequential>
  </macrodef>

  <macrodef name="forceMetaMerge">
    <sequential>
      <property name="force.meta.merge.script" value="force-meta-merge.js" />

      <exec osfamily="unix" executable="node"  failonerror="true">
        <arg line="${force.meta.merge.script}" />
      </exec>

      <exec osfamily="windows" executable="cmd" failonerror="true">
        <arg line="/c node ${force.meta.merge.script}" />
      </exec>
    </sequential>
  </macrodef>

  <macrodef name="gitScript">
    <attribute name="args" default="" />

    <sequential>
      <property name="force.git.script.unix" value="git-commit.sh" />
      <property name="force.git.script.win" value="git-commit.bat" />

      <exec osfamily="unix"  failonerror="true" executable="/bin/bash">
        <arg line="${force.git.script.unix}" />
      </exec>

      <exec osfamily="windows" executable="cmd" failonerror="true">
        <arg line="/c node ${force.git.script.win} @{args}" />
      </exec>
    </sequential>
  </macrodef>

  <macrodef name="cleanScript">
    <sequential>
      <property name="force.meta.clean.script" value="clean-metadata.js" />

      <exec osfamily="unix" executable="node"  failonerror="true">
        <arg line="${force.meta.clean.script}" />
      </exec>

      <exec osfamily="windows" executable="cmd" failonerror="true">
        <arg line="/c node ${force.meta.clean.script}" />
      </exec>
    </sequential>
  </macrodef>

  <target name="clean">
    <cleanScript />
  </target>

  <target name="-prepareForGit">
    <delete includeemptydirs="true">
      <fileset dir="${build.dir}/profile-packages" includes="**/*"/>
    </delete>
    <delete includeemptydirs="true">
      <fileset dir="${build.dir}/profile-packages-metadata" includes="**/*"/>
    </delete>
    <delete file="${build.dir}/bulk-retrievable-target.xml"/>
    <delete file="${build.dir}/profile-packages-target.xml"/>
  </target>

  <target name="pushToGit" depends="-prepareForGit">
    <gitScript />
  </target>

  <target name="generatePackageXmlAndBuildXml" depends="-setUp, -setUpMetadataDir">
    <forceMetaBackup />
  </target>

  <target name="bulkRetrievable" depends="generatePackageXmlAndBuildXml, -setUpMetadataDir">
    <ant antfile="${build.dir}/bulk-retrievable-target.xml" />
  </target>

  <target name="bulkRetrieveFolders" depends="generatePackageXmlAndBuildXml">
    <ant antfile="${build.dir}/folders-build.xml" />
  </target>

  <target name="bulkRetrieveOther" depends="generatePackageXmlAndBuildXml, -setUpMetadataDir">
    <ant antfile="${build.dir}/profile-packages-target.xml" />
  </target>

  <target name="retrieveMiscMetadata" depends="generatePackageXmlAndBuildXml,-setUpMetadataDir">
    <antcall target="-sfRetrieve"><param name="unpackaged" value="${build.dir}/misc-package.xml" /></antcall>

    <ant antfile="${build.dir}/profile-packages-target.xml" />
    
    <antcall target="xmlMergeProfilesAndPermissions" />
  </target>

  <target name="backupMetadata" depends="clean,bulkRetrievable, bulkRetrieveOther, mergeData, pushToGit">
  </target>

  <target name="mergeData" depends="-setUp, -setUpMetadataDir">
    <forceMetaMerge />
  </target>

  <target name="xmlMergeProfilesAndPermissions">
    <forceMetaBackup args="--build-xml-merge-target" />
    <ant antfile="${build.dir}/profile-packages-merge-target.xml" />
  </target>


  <target name="-sfRetrieve">
    <echo>Retrieving ${unpackaged}</echo>
    <sf:retrieve
      unpackaged="${unpackaged}"
      retrieveTarget="${build.metadata.dir}"
      username="${sf.username}"
      password="${sf.password}"
      serverurl="${sf.serverurl}"
      pollWaitMillis="${sf.pollWaitMillis}"
      maxPoll="${sf.maxPoll}"
    />
  </target>

  <target name="-sfListMetadata">
    <sf:listMetadata
      metadataType="${metadataType}"
      resultFilePath="${build.lists.dir}/${metadataType}.log"
      username="${sf.username}"
      password="${sf.password}"
      serverurl="${sf.serverurl}"
    />
  </target>
</project>
